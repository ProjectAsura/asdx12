//-----------------------------------------------------------------------------
// File : asdxFence.h
// Desc : Fence Module.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <cstdint>
#include <d3d12.h>
#include <asdxRef.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// Fence class
///////////////////////////////////////////////////////////////////////////////
class Fence final
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    static constexpr uint32_t kIgnore   = 0;
    static constexpr uint32_t kInfinite = 0xFFFFFFFF;

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    Fence();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~Fence();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init( ID3D12Device* pDevice );

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      フェンスが指定された値に達するまで待機します.
    //!
    //! @param[in]      fenceValue      待機カウンター.
    //! @param[in]      mesc            タイムアウト時間(ミリ秒).
    //-------------------------------------------------------------------------
    void Wait(UINT64 fenceValue, uint32_t msec = kInfinite);

    //-------------------------------------------------------------------------
    //! @brief      フェンスを取得します.
    //!
    //! @return     フェンスを返却します.
    //-------------------------------------------------------------------------
    ID3D12Fence* GetPtr() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    RefPtr<ID3D12Fence>     m_Fence;        //!< フェンスです.
    HANDLE                  m_Handle;       //!< イベントハンドルです.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

///////////////////////////////////////////////////////////////////////////////
// WaitPoint class
///////////////////////////////////////////////////////////////////////////////
class WaitPoint final
{
    //=========================================================================
    // friend classes and methods.
    //=========================================================================
    friend class CommandQueue;

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    WaitPoint();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~WaitPoint();

    //-------------------------------------------------------------------------
    //! @brief      代入演算子です.
    //-------------------------------------------------------------------------
    WaitPoint& operator = (const WaitPoint& value);

    //-------------------------------------------------------------------------
    //! @brief      有効かどうかチェックします.
    //!
    //! @retval true    有効な値です.
    //! @retval false   無効な値です.
    //-------------------------------------------------------------------------
    bool IsValid() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    UINT64          m_FenceValue    = 0;
    ID3D12Fence*    m_pFence        = nullptr;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

} // namespace asdx


