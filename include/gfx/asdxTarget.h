//-----------------------------------------------------------------------------
// File : asdxTarget.h
// Desc : Target Wrapper.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <dxgi1_6.h>
#include <gfx/asdxView.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// TargetDesc2D structure
///////////////////////////////////////////////////////////////////////////////
struct TargetDesc
{
    D3D12_RESOURCE_DIMENSION    Dimension;          //!< 次元です.
    uint64_t                    Alignment;          //!< アライメントです.
    uint64_t                    Width;              //!< 横幅です.
    uint32_t                    Height;             //!< 縦幅です.
    uint16_t                    DepthOrArraySize;   //!< 奥行 または 配列サイズです.
    uint16_t                    MipLevels;          //!< ミップレベル数です.
    DXGI_FORMAT                 Format;             //!< フォーマットです.
    DXGI_SAMPLE_DESC            SampleDesc;         //!< サンプル設定です.
    D3D12_RESOURCE_STATES       InitState;          //!< 初期ステート.

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    TargetDesc()
    : Dimension         ( D3D12_RESOURCE_DIMENSION_UNKNOWN )
    , Alignment         ( 0 )
    , Width             ( 0 )
    , Height            ( 0 )
    , MipLevels         ( 0 )
    , DepthOrArraySize  ( 0 )
    , Format            ( DXGI_FORMAT_UNKNOWN )
    , InitState         ( D3D12_RESOURCE_STATE_COMMON )
    {
        SampleDesc.Count   = 0;
        SampleDesc.Quality = 0;
    }
};

///////////////////////////////////////////////////////////////////////////////
// ColorTarget class
///////////////////////////////////////////////////////////////////////////////
class ColorTarget
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    ColorTarget();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~ColorTarget();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDesc       構成設定です.
    //! @param[in]      isSRGB      sRGBフォーマットに設定する場合は true (ただし，設定可能な場合に限る).
    //! @retval true    初期化成功.
    //! @retval false   初期化失敗.
    //-------------------------------------------------------------------------
    bool Init(const TargetDesc* pDesc, bool isSRGB);

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pSwapChain          スワップチェインです.
    //! @param[in]      backbufferIndex     バックバッファ番号です.
    //! @param[in]      isSRGB              sRGBフォーマットに設定する場合は true (ただし設定可能な場合に限る).
    //! @retval true    初期化成功.
    //! @retval false   初期化失敗.
    //-------------------------------------------------------------------------
    bool Init(IDXGISwapChain* pSwapChain, uint32_t backbufferIndex, bool isSRGB);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      リサイズ処理を行います.
    //! 
    //! @param[in]      width       横幅
    //! @param[in]      height      縦幅.
    //! @retval true    リサイズに成功.
    //! @retval false   リサイズに失敗.
    //-------------------------------------------------------------------------
    bool Resize(uint32_t width, uint32_t height);

    //-------------------------------------------------------------------------
    //! @brief      リソースを取得します.
    //!
    //! @return     リソースを返却します.
    //-------------------------------------------------------------------------
    ID3D12Resource* GetResource() const;

    //-------------------------------------------------------------------------
    //! @brief      レンダーターゲットビューを取得します.
    //!
    //! @return     レンダーターゲットビューを返却します.
    //-------------------------------------------------------------------------
    const IRenderTargetView* GetRTV() const;

    //-------------------------------------------------------------------------
    //! @brief      シェーダリソースビューを取得します.
    //!
    //! @return     シェーダリソースビューを返却します.
    //-------------------------------------------------------------------------
    const IShaderResourceView* GetSRV() const;

    //-------------------------------------------------------------------------
    //! @brief      構成設定を取得します.
    //!
    //! @return     構成設定を返却します.
    //-------------------------------------------------------------------------
    TargetDesc GetDesc() const;

    //-------------------------------------------------------------------------
    //! @brief      sRGBフラグを取得します.
    //! 
    //! @return     sRGBフラグを返却します.
    //-------------------------------------------------------------------------
    bool IsSRGB() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    RefPtr<ID3D12Resource>      m_pResource;
    RefPtr<IRenderTargetView>   m_pRTV;
    RefPtr<IShaderResourceView> m_pSRV;
    TargetDesc                  m_Desc;
    bool                        m_IsSRGB;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};


///////////////////////////////////////////////////////////////////////////////
// DepthTarget class
///////////////////////////////////////////////////////////////////////////////
class DepthTarget
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    DepthTarget();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~DepthTarget();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      device      グラフィックスデバイスです.
    //! @param[in]      pDesc       構成設定です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(const TargetDesc* pDesc);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      リサイズ処理を行います.
    //! 
    //! @param[in]      width       横幅.
    //! @param[in]      height      縦幅.
    //! @retval true    リサイズに成功
    //! @retval false   リサイズに失敗.
    //-------------------------------------------------------------------------
    bool Resize(uint32_t width, uint32_t height);

    //-------------------------------------------------------------------------
    //! @brief      リソースを取得します.
    //!
    //! @return     リソースを返却します.
    //-------------------------------------------------------------------------
    ID3D12Resource* GetResource() const;

    //-------------------------------------------------------------------------
    //! @brief      深度ステンシルビューを取得します.
    //!
    //! @return     深度ステンシルビューを返却します.
    //-------------------------------------------------------------------------
    const IDepthStencilView* GetDSV() const;

    //-------------------------------------------------------------------------
    //! @brief      シェーダリソースビューを取得します.
    //!
    //! @return     シェーダリソースビューを返却します.
    //-------------------------------------------------------------------------
    const IShaderResourceView* GetSRV() const;

    //-------------------------------------------------------------------------
    //! @brief      構成設定を取得します.
    //! 
    //! @return     構成設定を返却します.
    //-------------------------------------------------------------------------
    TargetDesc GetDesc() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    RefPtr<ID3D12Resource>      m_pResource;
    RefPtr<IDepthStencilView>   m_pDSV;
    RefPtr<IShaderResourceView> m_pSRV;
    TargetDesc                  m_Desc;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};


///////////////////////////////////////////////////////////////////////////////
// ComputeTarget
///////////////////////////////////////////////////////////////////////////////
class ComputeTarget
{
public:
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    ComputeTarget();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~ComputeTarget();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      device      グラフィックスデバイスです.
    //! @param[in]      pDesc       構成設定です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(const TargetDesc* pDesc, uint32_t stride = 0);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      リソースを取得します.
    //!
    //! @return     リソースを返却します.
    //-------------------------------------------------------------------------
    ID3D12Resource* GetResource() const;

    //-------------------------------------------------------------------------
    //! @brief      アンオーダードアクセスビューを取得します.
    //!
    //! @return     アンオーダードアクセスビューを返却します.
    //-------------------------------------------------------------------------
    const IUnorderedAccessView* GetUAV() const;

    //-------------------------------------------------------------------------
    //! @brief      シェーダリソースビューを取得します.
    //!
    //! @return     シェーダリソースビューを返却します.
    //-------------------------------------------------------------------------
    const IShaderResourceView* GetSRV() const;

    //-------------------------------------------------------------------------
    //! @brief      構成設定を取得します.
    //! 
    //! @return     構成設定を返却します.
    //-------------------------------------------------------------------------
    TargetDesc GetDesc() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    RefPtr<ID3D12Resource>          m_pResource;
    RefPtr<IUnorderedAccessView>    m_pUAV;
    RefPtr<IShaderResourceView>     m_pSRV;
    TargetDesc                      m_Desc;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

} // namespace asdx
