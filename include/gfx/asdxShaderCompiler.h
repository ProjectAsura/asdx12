//-----------------------------------------------------------------------------
// File : asdxShaderCompiler.h
// Desc : Shader Compiler.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <fnd/asdxRef.h>


//-----------------------------------------------------------------------------
// Linker
//-----------------------------------------------------------------------------
#ifdef ASDX_AUTO_LINK
    #ifdef ASDX_ENABLE_DXC
        #pragma comment( lib, "dxcompiler.lib" )
    #else
        #pragma comment( lib, "d3dcompiler.lib")
    #endif
#endif

namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// IBlob structure
///////////////////////////////////////////////////////////////////////////////
struct IBlob : public IReference
{
    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    virtual ~IBlob()
    { /* DO_NOTHING */ }

    //-------------------------------------------------------------------------
    //! @brief      バッファサイズを取得します.
    //!
    //! @return     バッファサイズを返却します.
    //-------------------------------------------------------------------------
    virtual size_t GetBufferSize() = 0;

    //-------------------------------------------------------------------------
    //! @brief      バッファポインタを取得します.
    //!
    //! @return     バッファポインタを返却します.
    //-------------------------------------------------------------------------
    virtual void* GetBufferPointer() = 0;
};

//-----------------------------------------------------------------------------
//! @brief      バイナリラージオブジェクトを生成します.
//!
//! @param[in]      size        生成サイズ.
//! @param[out]     ppResult    格納先.
//! @retval true    生成に成功.
//! @retval false   生成に失敗.
//-----------------------------------------------------------------------------
bool CreateBlob(size_t size, IBlob** ppResult);

//-----------------------------------------------------------------------------
//! @brief      ファイル内容をバイナリラージオブジェクトに読み込みます.
//!
//! @param[in]      filename    ファイル名です.
//! @param[out]     ppResult    格納先です.
//! @retval true    読み込みに成功.
//! @retval false   読み込みに失敗.
//-----------------------------------------------------------------------------
bool ReadFileToBlob(const char* filname, IBlob** ppResult);

//-----------------------------------------------------------------------------
//! @brief      バイナリラージオブジェクトの内容をファイルに書き出します.
//!
//! @param[in]      pBlob       バイナリラージオブジェクト.
//! @param[in]      filename    出力ファイル名.
//! @retval true    書き出しに成功.
//! @retval false   書き出しに失敗.
//-----------------------------------------------------------------------------
bool WriteBlobToFile(IBlob* pBlob, const char* filename);

//-----------------------------------------------------------------------------
//! @brief      ファイルからシェーダコンパイルします.
//!
//! @param[in]      filename            ファイル名です.
//! @param[in]      compileArgs         コンパイル引数です.
//! @param[in]      countCompileArgs    コンパイル引数の数です.
//! @param[out]     ppResult            シェーダバイナリの格納先です.
//! @retval true    コンパイルに成功.
//! @retval false   コンパイルに失敗.
//-----------------------------------------------------------------------------
bool CompileFromFile(
    const wchar_t*  filename,
    const char*     entryPoint,
    const char*     shaderModel,
    IBlob**         ppResult);

} // namespace