//-----------------------------------------------------------------------------
// File : asdxDisposer.h
// Desc : Object Disposer.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <list>
#include <mutex>
#include <d3d12.h>
#include <asdxRef.h>
#include <asdxSpinLock.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// Disposer class
///////////////////////////////////////////////////////////////////////////////
class Disposer
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    static constexpr uint8_t kDefaultLifeTime = 4;    // 4フレーム分

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    Disposer();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~Disposer();

    //-------------------------------------------------------------------------
    //! @brief      オブジェクトを登録します.
    //!
    //! @param[in]      pObject     登録するオブジェクト.
    //! @param[in]      lifeTime    生存フレーム数.
    //-------------------------------------------------------------------------
    void Push(ID3D12Object*& pObject, uint8_t lifeTime = kDefaultLifeTime);

    //-------------------------------------------------------------------------
    //! @brief      フレーム同期し，遅延解放を実行します.
    //-------------------------------------------------------------------------
    void FrameSync();

    //-------------------------------------------------------------------------
    //! @brief      強制破棄を実行します.
    //-------------------------------------------------------------------------
    void Clear();

private:
    ///////////////////////////////////////////////////////////////////////////
    // Item structure
    ///////////////////////////////////////////////////////////////////////////
    struct Item
    {
        ID3D12Object*   pObject;    //!< 破棄オブジェクト.
        uint8_t         LifeTime;   //!< 生存フレーム数.
    };

    //=========================================================================
    // private variables.
    //=========================================================================
    std::list<Item>         m_List;         //!< 破棄リスト.
    SpinLock                m_SpinLock;     //!< スピンロック.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

} // namespace asdx
