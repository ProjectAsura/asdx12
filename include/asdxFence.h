//-----------------------------------------------------------------------------
// File : asdxFence.h
// Desc : Fence Module.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <cstdint>
#include <d3d12.h>
#include <asdxRef.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// Fence class
///////////////////////////////////////////////////////////////////////////////
class Fence final
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    static constexpr uint32_t kIgnore   = 0;
    static constexpr uint32_t kInfinite = 0xFFFFFFFF;

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    Fence();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~Fence();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init( ID3D12Device* pDevice );

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      フェンスに値を設定します.
    //!
    //! @return     待機カウンターを返却します. 操作に失敗した場合は 0 が返却されます.
    //-------------------------------------------------------------------------
    UINT64 Signal(ID3D12CommandQueue* pQueue);

    //-------------------------------------------------------------------------
    //! @brief      フェンスが指定された値に達するまで待機します.
    //!
    //! @param[in]      fenceValue      待機カウンター.
    //! @param[in]      mesc            タイムアウト時間(ミリ秒).
    //-------------------------------------------------------------------------
    void Wait(UINT64 fenceValue, uint32_t msec = kInfinite);

    //-------------------------------------------------------------------------
    //! @brief      コマンド実行完了を待機します.
    //!
    //! @param[in]      pQueue      コマンドキューです.
    //! @param[in]      mesc        タイムアウト時間(ミリ秒).
    //-------------------------------------------------------------------------
    void SignalAndWait(ID3D12CommandQueue* pQueue, uint32_t msec = kInfinite);

    //-------------------------------------------------------------------------
    //! @brief      フェンスを取得します.
    //!
    //! @return     フェンスを返却します.
    //-------------------------------------------------------------------------
    ID3D12Fence* GetPtr() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    RefPtr<ID3D12Fence>     m_Fence;        //!< フェンスです.
    HANDLE                  m_Handle;       //!< イベントハンドルです.
    UINT64                  m_Counter;      //!< フェンスカウンタです.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

} // namespace asdx


