//-----------------------------------------------------------------------------
// File : TcpConnector.h
// Desc : TCP/IP Connector
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <cstdint>
#include <atomic>
#include <mutex>

//-----------------------------------------------------------------------------
// Linker
//-----------------------------------------------------------------------------
#ifdef ASDX_AUTO_LINK
#pragma comment(lib, "ws2_32.lib")
#endif//ASDX_AUTO_LINK


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// TcpConnector class
///////////////////////////////////////////////////////////////////////////////
class TcpConnector
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    ///////////////////////////////////////////////////////////////////////////
    // Desc structure
    ///////////////////////////////////////////////////////////////////////////
    struct Desc
    {
        uint16_t     Port;           //!< ポート番号です.
        const char*  Address;        //!< IPアドレスです.
        bool         Server;         //!< サーバー側の場合は true に設定.
    };

    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    TcpConnector();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    virtual ~TcpConnector();

    //-------------------------------------------------------------------------
    //! @brief      接続処理を行います.
    //!
    //! @param[in]      info        接続先情報です.
    //! @retval true    接続に成功.
    //! @retval false   接続に失敗.
    //-------------------------------------------------------------------------
    bool Connect( const Desc& info );

    //-------------------------------------------------------------------------
    //! @brief      切断処理を行います.
    //-------------------------------------------------------------------------
    void Close();

    //-------------------------------------------------------------------------
    //! @brief      接続しているかどうかチェックします.
    //!
    //! @retval true    接続に成功.
    //! @retval false   接続に失敗.
    //-------------------------------------------------------------------------
    bool IsConnect();

    //-------------------------------------------------------------------------
    //! @brief      送信処理を行います.
    //!
    //! @param[in]      pBuffer     送信データ.
    //! @param[in]      size        送信データサイズ.
    //! @retval true    送信に成功.
    //! @retval false   送信に失敗.
    //-------------------------------------------------------------------------
    bool Send( const void* pBuffer, int size );

    //-------------------------------------------------------------------------
    //! @brief      受信処理を行います.
    //!
    //! @param[out]     pBuffer     受信データ.
    //! @param[in]      size        読み取りデータサイズ.
    //! @retval true    受信に成功.
    //! @retval false   受信に失敗.
    //-------------------------------------------------------------------------
    bool Receive( void* pBuffer, int size );

protected:
    //=========================================================================
    // protected variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // protected methods.
    //=========================================================================
    /* NOTHING */

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    std::atomic<bool>       m_IsConnected;  //!< 接続済みかどうかを示すフラグ
    std::atomic<bool>       m_IsReady;      //!< 準備ができているかどうかを示すフラグ.
    std::recursive_mutex    m_Mutex;        //!< ミューテックス.
    uintptr_t               m_SrcSocket;    //!< 入力ソケット.
    uintptr_t               m_DstSocket;    //!< 出力ソケット.
    bool                    m_IsServer;     //!< サーバーかどうか?

    //=========================================================================
    // private methods.
    //=========================================================================
    bool ConnectAsServer(const Desc& info);
    bool ConnectAsClient(const Desc& info);
};

} // namespace asdx
