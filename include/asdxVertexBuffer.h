//-----------------------------------------------------------------------------
// File : asdxVertexBuffer.h
// Desc : Vertex Buffer Wrapper.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <asdxGraphicsDevice.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// VertexBuffer class
///////////////////////////////////////////////////////////////////////////////
class VertexBuffer
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    VertexBuffer();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~VertexBuffer();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice     デバイスです.
    //! @param[in]      size        バッファサイズです.
    //! @param[in]      stride      1頂点当たりのサイズです.
    //! @param[in]      enableSRV   シェーダリソースビューを作成する場合は true を指定.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(GraphicsDevice& device, uint64_t size, uint32_t stride, bool enableSRV);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      メモリマッピングを行います.
    //!
    //! @return     マッピング先のメモリアドレスを返却します.
    //!             マッピングに失敗した場合は nullptr が返却します.
    //-------------------------------------------------------------------------
    void* Map();

    //-------------------------------------------------------------------------
    //! @brief      メモリマッピングを解除します.
    //-------------------------------------------------------------------------
    void Unmap();

    //-------------------------------------------------------------------------
    //! @brief      頂点バッファビューを取得します.
    //!
    //! @return     頂点バッファビューを返却します.
    //-------------------------------------------------------------------------
    D3D12_VERTEX_BUFFER_VIEW GetView() const;

    //-------------------------------------------------------------------------
    //! @brief      リソースを取得します.
    //!
    //! @return     リソースを返却します.
    //-------------------------------------------------------------------------
    ID3D12Resource* GetResource() const;

    //-------------------------------------------------------------------------
    //! @brief      ディスクリプタを取得します.
    //!
    //! @return     ディスクリプタを返却します.
    //-------------------------------------------------------------------------
    const Descriptor* GetDescriptor() const;

    //-------------------------------------------------------------------------
    //! @brief      メモリマッピングを行います.
    //!
    //! @return     マッピング先のメモリアドレスを返却します.
    //!             マッピングに失敗した場合は nullptr が返却します.
    //-------------------------------------------------------------------------
    template<typename T>
    T* Map()
    { return reinterpret_cast<T*>(Map()); }

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    RefPtr<ID3D12Resource>      m_pResource;        //!< リソースです.
    D3D12_VERTEX_BUFFER_VIEW    m_View;             //!< 頂点バッファビューです.
    RefPtr<Descriptor>          m_pDescriptor;      //!< ディスクリプタです.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

} // namespace asdx
