//-----------------------------------------------------------------------------
// File : asdxThreadPool.h
// Desc : Worker Thread.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <cstdint>
#include <fnd/asdxQueue.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// IRunnable interface
///////////////////////////////////////////////////////////////////////////////
struct IRunnable : public Queue<IRunnable>::Node
{
    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    virtual ~IRunnable()
    { /* DO_NOTHING */ }

    //-------------------------------------------------------------------------
    //! @brief      処理を実行します.
    //-------------------------------------------------------------------------
    virtual void Run() = 0;
};

///////////////////////////////////////////////////////////////////////////////
// IThreadPool interface
///////////////////////////////////////////////////////////////////////////////
struct IThreadPool
{
    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    virtual ~IThreadPool()
    { /* DO_NOTHING */ }

    //-------------------------------------------------------------------------
    //! @brief      解放処理を行います.
    //-------------------------------------------------------------------------
    virtual void Release() = 0;

    //-------------------------------------------------------------------------
    //! @brief      ジョブを追加します.
    //-------------------------------------------------------------------------
    virtual void Push(IRunnable* runnable) = 0;

    //-------------------------------------------------------------------------
    //! @brief      すべてのジョブの完了を待機します.
    //-------------------------------------------------------------------------
    virtual void Wait() = 0;
};

//-----------------------------------------------------------------------------
//! @brief      スレッドプールを生成します.
//!
//! @param[in]      threadCount     スレッド数です.
//! @param[out]     ppThreadPool    スレッドプールの格納先です.
//! @retval true    生成に成功.
//! @retval false   生成に失敗.
//-----------------------------------------------------------------------------
bool CreateThreadPool(uint8_t threadCount, IThreadPool** ppThreadPool);


} // namespace asdx
