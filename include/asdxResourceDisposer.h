//-----------------------------------------------------------------------------
// File : asdxResourceDisposer.h
// Desc : Resource Disposer.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <list>
#include <mutex>
#include <d3d12.h>
#include <asdxRef.h>
#include <asdxSpinLock.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// ResourceDisposer class
///////////////////////////////////////////////////////////////////////////////
class ResourceDisposer
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    static constexpr uint8_t kDefaultLifeTime = 4;    // 4フレーム分

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    ResourceDisposer();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~ResourceDisposer();

    //-------------------------------------------------------------------------
    //! @brief      リソースを登録します.
    //!
    //! @param[in]      pResource       登録するリソース.
    //! @param[in]      lifeTime        生存フレーム数.
    //-------------------------------------------------------------------------
    void Push(ID3D12Resource*& pResource, uint8_t lifeTime = kDefaultLifeTime);

    //-------------------------------------------------------------------------
    //! @brief      フレーム同期し，遅延解放を実行します.
    //-------------------------------------------------------------------------
    void FrameSync();

    //-------------------------------------------------------------------------
    //! @brief      強制破棄を実行します.
    //-------------------------------------------------------------------------
    void Clear();

private:
    ///////////////////////////////////////////////////////////////////////////
    // Item structure
    ///////////////////////////////////////////////////////////////////////////
    struct Item
    {
        ID3D12Resource*     pResource;      //!< 破棄リソース.
        uint8_t             LifeTime;       //!< 生存フレーム数.
    };

    //=========================================================================
    // private variables.
    //=========================================================================
    std::list<Item>         m_List;         //!< 破棄リスト.
    SpinLock                m_SpinLock;     //!< スピンロック.

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};

} // namespace asdx
