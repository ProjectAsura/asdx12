//-----------------------------------------------------------------------------
// File : asdxQueue.h
// Desc : Command Queue Module.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <atomic>
#include <d3d12.h>
#include <asdxRef.h>
#include <asdxFence.h>


namespace asdx {

///////////////////////////////////////////////////////////////////////////////
// Queue class
///////////////////////////////////////////////////////////////////////////////
class Queue : public IReference
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    static constexpr uint32_t kIgnore   = 0;
    static constexpr uint32_t kInfinite = 0xFFFFFFFF;

    //=========================================================================
    // public methods.
    //=========================================================================
    static bool Create(ID3D12Device* pDevice, D3D12_COMMAND_LIST_TYPE type, Queue** ppResult);

    //-------------------------------------------------------------------------
    //! @brief      参照カウントを増やします.
    //-------------------------------------------------------------------------
    void AddRef() override;

    //-------------------------------------------------------------------------
    //! @brief      解放処理を行います.
    //-------------------------------------------------------------------------
    void Release() override;

    //-------------------------------------------------------------------------
    //! @brief      参照カウントを取得します.
    //-------------------------------------------------------------------------
    uint32_t GetCount() const override;

    //-------------------------------------------------------------------------
    //! @brief      コマンドを実行します.
    //!
    //! @param[in]      count           実行するコマンド数.
    //! @param[in]      ppList          コマンドリストの配列です.
    //-------------------------------------------------------------------------
    void Execute(uint32_t count, ID3D12CommandList** ppList);

    //-------------------------------------------------------------------------
    //! @brief      コマンドの完了を待機します.
    //!
    //! @param[in]      msec        待機時間です.
    //-------------------------------------------------------------------------
    void Wait(uint32_t msec);

    //-------------------------------------------------------------------------
    //! @brief      コマンドキューを取得します.
    //!
    //! @return     コマンドキューを返却します.
    //-------------------------------------------------------------------------
    ID3D12CommandQueue* GetQueue() const;

    //-------------------------------------------------------------------------
    //! @brief      フェンスを取得します.
    //!
    //! @return     フェンスを返却します.
    //-------------------------------------------------------------------------
    ID3D12Fence* GetFence() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    Fence                       m_Fence;        //!< フェンスです.
    RefPtr<ID3D12CommandQueue>  m_Queue;        //!< キューです.
    std::atomic<uint32_t>       m_Counter;      //!< 参照カウンターです.
    std::atomic<bool>           m_IsExecuted;   //!< 実行されたかどうか?

    //=========================================================================
    // private methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    Queue();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~Queue();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @param[in]      type            コマンドリストタイプです.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(ID3D12Device* pDevice, D3D12_COMMAND_LIST_TYPE type);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();
};

} // namespace asdx
